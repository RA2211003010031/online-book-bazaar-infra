---
# Main Ansible Playbook for Server Setup
# This playbook sets up basic configuration on all servers

- name: Setup Basic Server Configuration
  hosts: web_servers
  become: yes
  gather_facts: yes
  
  vars:
    app_name: "online-book-bazaar"
    app_user: "ubuntu"
    app_directory: "/opt/bookbazaar"
    
  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600
      
    - name: Install basic packages
      apt:
        name:
          - git
          - curl
          - wget
          - vim
          - htop
          - tree
          - unzip
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
      
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      
    - name: Install Docker
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
      
    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
      
    - name: Add user to docker group
      user:
        name: "{{ app_user }}"
        groups: docker
        append: yes
      
    - name: Create application directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
      
    - name: Install Docker Compose (standalone)
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
      
    - name: Create symbolic link for docker-compose
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link
      
    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      
    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: docker_compose_version
      
    - name: Display Docker version
      debug:
        msg: "Docker version: {{ docker_version.stdout }}"
      
    - name: Display Docker Compose version
      debug:
        msg: "Docker Compose version: {{ docker_compose_version.stdout }}"

    - name: Create logs directory
      file:
        path: "{{ app_directory }}/logs"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
