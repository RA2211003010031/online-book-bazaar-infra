---
# Monitoring Setup Playbook (Prometheus and Grafana)
# This playbook sets up monitoring on the designated server

- name: Install and Configure Monitoring (Prometheus + Grafana)
  hosts: monitoring_server
  become: yes
  gather_facts: yes
  
  vars:
    prometheus_version: "2.40.0"
    node_exporter_version: "1.4.0"
    grafana_admin_password: "admin123"
    
  tasks:
    # Prometheus Installation
    - name: Create prometheus user
      user:
        name: prometheus
        shell: /bin/false
        home: /var/lib/prometheus
        create_home: no
        system: yes
      
    - name: Create prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus
      
    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
      
    - name: Extract Prometheus
      unarchive:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
      
    - name: Copy Prometheus binaries
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        owner: prometheus
        group: prometheus
        mode: '0755'
        remote_src: yes
      loop:
        - prometheus
        - promtool
      
    - name: Copy Prometheus console files
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/etc/prometheus/{{ item }}"
        owner: prometheus
        group: prometheus
        mode: '0755'
        remote_src: yes
      loop:
        - consoles
        - console_libraries
      
    - name: Create Prometheus configuration
      template:
        src: prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: restart prometheus
      
    - name: Create Prometheus service file
      template:
        src: prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
      notify: 
        - reload systemd
        - restart prometheus
      
    # Node Exporter Installation (on all servers)
    - name: Install Node Exporter on all servers
      include_tasks: install_node_exporter.yml
      delegate_to: "{{ item }}"
      with_items: "{{ groups['web_servers'] }}"
      
    # Grafana Installation
    - name: Add Grafana GPG key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present
      
    - name: Add Grafana repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
      
    - name: Install Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes
      
    - name: Start and enable services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - prometheus
        - grafana-server
      
    - name: Wait for services to start
      wait_for:
        port: "{{ item }}"
        timeout: 300
      loop:
        - 9090  # Prometheus
        - 3000  # Grafana
      
    - name: Display monitoring access information
      debug:
        msg:
          - "Prometheus is accessible at: http://{{ ansible_host }}:9090"
          - "Grafana is accessible at: http://{{ ansible_host }}:3000"
          - "Grafana default login: admin/admin"

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes
        
    - name: restart prometheus
      systemd:
        name: prometheus
        state: restarted
